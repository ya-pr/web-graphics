/*! OSMeRegions JavaScript Library | http://data.esosedi.org/regions/ | https://github.com/esosedi/regions | @author Anton Korzunov <kashey@yandex-team.ru> | Released under the MIT license */
!function(e){var t=function(){function e(e){for(var t=[],r=0,n=e.length;n>r;++r)t[r]=[e[r][1],e[r][0]];return t}function t(t){for(var r=[],n=0,o=t.length;o>n;++n)r[n]=e(t[n]);return r}function r(e,t){for(var r=0,n=0;t>n;++n)r|=e.charCodeAt(n)<<8*n;return r}function n(e){return Math.min(180,Math.max(-180,e))}function o(e){return Math.min(85,Math.max(-85,e))}function a(e){return e=e.replace(/_/g,"/").replace(/-/g,"+"),"undefined"!=typeof atob?atob(e):new Buffer(e,"base64").toString("binary")}function i(e){function t(){var e=r(i.substr(c,x),x);return c+=x,e}for(var i=a(e),s=i.length,u=[[r(i.substr(0,4),4)*C,r(i.substr(4,4),4)*C],[r(i.substr(8,4),4)*C,r(i.substr(12,4),4)*C]],f=[u[1][0]-u[0][0],u[1][1]-u[0][1]],l=[],c=16,p=f[0]*O,h=f[1]*O;s>c;){var g=[o(t()*p+u[0][0]),n(t()*h+u[0][1])];l.push([g[1],g[0]])}return l}function s(e,t,r){return r.wayCache[t]?r.wayCache[t]:r.wayCache[t]=i(e)}function u(e,t){return c(e,t,{fixDegenerate:!0})}function f(e,t,r){r=r||1e-9;var n=Math.abs(t[0]-e[0]),o=Math.abs(t[1]-e[1]);return r>n&&r>o}function l(e,t){var r=0,n=e.length,o=t.length,a=Math.min(n,o),i=10/65535;if(o--,1>o)return 0;for(var s=0;a>s&&f(e[s],t[o-s],i);++s)r++;return r}function c(e,t,r){var n=[],o=[],a=[],i=e.length?e:t.paths[e],u=t.ways,r=r||{};if(t.wayCache=t.wayCache||{},!i)return!1;for(var f=0,c=i.length;c>f;++f){var p=i[f],h=[],g=[],v=[0];"number"==typeof p&&(p=[p]);for(var d=0,m=p.length;m>d;++d){var y=Math.abs(p[d]),b=s(u[y],y,t);if(p[d]<0&&(b=b.slice(0),b.reverse()),r.fixDegenerate){var w=l(b,h);if(w&&(b=b.slice(w)),d==m-1){var M=b.slice(0);M.reverse(),w=l(h,b),w&&(w--,b.length=b.length-w,h=h.slice(w))}}else h.length&&(h.length=h.length-1);h.push.apply(h,b),v.push(h.length-1),g.push(y)}h.push(h[0]),n.push(h),o.push(v),a.push(g)}return{type:"Polygon",fillRule:"nonZero",coordinates:n,path:i,fixedPoints:o}}function p(e,t,r){var n=new XMLHttpRequest;n.open("GET",e,!0),n.onreadystatechange=function(){if(4===n.readyState)if(200===n.status||304===n.status)try{var e=JSON.parse(n.responseText);t(e)}catch(o){r(o)}else window.console&&console.error("Response recieved with status "+n.status),r(n)},n.setRequestHeader("Content-Type","application/json"),n.setRequestHeader("X-Requested-With","XMLHttpRequest"),n.send()}function h(e,t){t=t||{};var r=e.regions,n=[],o=t.postFilter||(e.meta&&e.meta.postFilter?new Function("region",e.meta.postFilter):0),a=t.scheme||e.meta&&e.meta.scheme,i=e.meta&&e.meta.disputedBorders||{},s=t.recombine||t.lang||"en",u="string"==typeof s?i[s]:s,f=0;for(var l in i){var p=i[l];for(var h in p){var g=p[h];"string"==typeof g&&(p[h]=new Function("region",g))}}for(var l in r)if(r.hasOwnProperty(l)&&(!o||o(v(l,e)))){if(u&&u[+l])f=d(e,{filter:u[+l]});else if(a&&a[+l]){var m=a[+l];f=d(e,{filter:"string"==typeof m?new Function("region",m):m})}else f=c(+l,e);n[r[l].index]={type:"Feature",geometry:f,properties:{osmId:l,level:r[l].level,properties:r[l].property||{},parents:r[l].parents,hintContent:r[l].name,name:r[l].name,title:r[l].name,wikipedia:r[l].wikipedia,orderIndex:r[l].index,square:r[l].square}}}for(var y=[],l=0,b=n.length;b>l;++l)n[l]&&y.push(n[l]);return y}function g(e){return{type:"Feature",geometry:{type:"Polygon",fillRule:e.geometry.coordinates.length>1?"evenOdd":"nonZero",coordinates:t(e.geometry.coordinates)},properties:e.properties}}function v(e,t){var r=t.regions[e],n=r.property||{};return{osmId:e,geoNamesId:n.geoNamesId,iso:n.iso3166,level:r.level,properties:n,getBorderWith:function(r){var n,o,a,i,s={},u=t.paths[r],f=t.paths[e];for(n=0,o=u.length;o>n;++n)for(a=0,i=u[n].length;i>a;++a)s[Math.abs(u[n][a])]=1;var l=[];for(n=0,o=f.length;o>n;++n)for(a=0,i=f[n].length;i>a;++a)s[Math.abs(f[n][a])]&&l.push(f[n]);return l},hasBorderWith:function(r){var n,o,a,i,s={},u=t.paths[e],f=t.paths[r];if(!u||!f)return!1;for(n=0,o=u.length;o>n;++n)for(a=0,i=u[n].length;i>a;++a)s[Math.abs(u[n][a])]=1;for(n=0,o=f.length;o>n;++n)for(a=0,i=f[n].length;i>a;++a)if(s[Math.abs(f[n][a])])return!0;return!1},hasParent:function(e){for(var t=r.parents,n=0,o=t.length;o>n;++n)if(t[n].id==e)return!0;return!1}}}function d(e,t){function r(e){for(var t=[],r=0,n=e.length;n>r;++r)t.push([e[r]]);return t}function n(e,t){function r(){for(var e in i)if(n(e))return+e;return!1}function n(e){return e&&i.hasOwnProperty(e)&&i[e][1]}function o(e,t){if(!i[t])return!1;var r=-1==x?i[t][0]:0,o=1==x?i[t][2]:0;if(n(o))t=o,e.push(+t*x);else if(n(r))t=r,e.push(+t);else{var a=s[-i[t][2]];t=0;for(var u in a)if(o=a[u],n(o)){t=o,e.push(+t);break}if(!t)return!1}return t}for(var a={},i={},s={},u=[e,t],f=0;2>f;++f)for(var l=u[f],c=0,p=l.length;p>c;++c){var h=l[c];"number"==typeof h&&(h=[h]);for(var g=0,v=h.length;v>g;++g){var d=Math.abs(h[g]);a[d]=(a[d]||0)+1}}for(var m=0,y=0,f=0;2>f;++f)for(var l=u[f],c=0,p=l.length;p>c;++c){var h=l[c];"number"==typeof h&&(h=[h]);for(var g=0,v=h.length;v>g;++g){var d=Math.abs(h[g]);if(1===a[d]){m++;var b=+h[(g-1+v)%v],w=+h[(g+1+v)%v];s[b]=s[b]||[],s[b].push(h[g]),i[h[g]]=[+b,+h[g],+w,f,c]}else y++}}if(!y)return!1;for(var M=[],C=[],x=1;!1!==(way=r());){for(C=[],x=1,C.push(+way);way;){i[way][1]=0;var O=o(C,way);if(!O)break;way=O}M.push(C)}return M}var o=e.regions,a=e.paths,i={},s=[];for(var f in o)if(o.hasOwnProperty(f)){var l=a[f],c=t.filter(v(f,e));c&&(c!==!0&&c.path&&(l=c.path),l&&l.length&&(l=r(l),l.length&&(i[f]=f,s.push.apply(s,l))))}s.sort(function(e,t){return Math.abs(e[0][0])<Math.abs(t[0][0])});for(var p=s[0],h={0:1},g=1,d=[],m=s.length,y=0,b=0,w=0;m>g;){b=0;for(var M=1,m=s.length;m>M;++M){var C=M%m;if(!(C in h)){var x=n(p,s[C]);x&&1==x.length?(p=x,h[C]=1,g++,b++):y=C}}if(!b){if(!y)break;d.push(p[0]),p=s[y],h[y]=1,g++}if(w++>1e3)break}return p&&d.push(p[0]),u(d,e)}function m(e,t){setTimeout(function(){e.apply(this,t)},0)}function y(e){for(var t={},r=e.features,n=0,o=r.length;o>n;++n){var a=r[n];a&&a.properties&&(t[a.properties.osmId]=a)}return t}function b(e){return e}function w(e){var t={};return"strokeWidth"in e&&(t.strokeWeight=e.strokeWidth),"fillColor"in e&&(t.fillColor=e.fillColor),"strokeColor"in e&&(t.strokeColor=e.strokeColor),"strokeOpacity"in e&&(t.strokeOpacity=Math.max(.001,e.strokeOpacity)),"fillOpacity"in e&&(t.fillOpacity=Math.max(.001,e.fillOpacity)),t}var M=0,C=1e-6,x=2,O=1/65535,k="http://data.esosedi.org/regions/v1/",P={};return{setHost:function(e){k=e},coordinateDecode:i,geometryCombine:c,flipCoordinate:t,recombine:d,geoJSON:function(e,t,r,n){n||(n=function(e){window.console&&console.error(e)});var o=t.lang||"en",a=o+"_"+e;if(a=e,!P[a]||t.nocache){var i=this;this.loadData(a,function(e){P[a]=e,m(r,[i.parseData(e,t),e])},n)}else m(r,[this.parseData(P[a],t),P[a]])},loadData:p,parseData:function(e,t){return{type:"FeatureCollection",features:h(e,t),metaData:e.meta}},dropCache:function(){P={}},_setCoordOrder:function(e){M="latlong"==e},toYandex:function(e,t){t=t||ymaps;for(var r=new t.GeoObjectCollection,n=e.features,o=y(e),a=0,i=n.length;i>a;++a){var s=n[a];s.geometry?r.add(new t.GeoObject(M?s:g(s),{simplificationFixedPoints:s.geometry.fixedPoints})):window.console&&console.log("osme line fail",s)}return{collection:r,add:function(e){e.geoObjects.add(r)},remove:function(){r.setParent(null)},setStyles:function(e){r.each(function(t){t.options.set(b(e(o[t.properties.get("osmId")],t)))})},addEvent:function(e,t){r.events.add(e,function(r){var n=r.get("target");t(o[n.properties.get("osmId")],[e,"yandex"],n,r)})},removeEvent:function(e){r.events.remove(e)}}},toGoogle:function(e,t){var r=y(e),n=new(t||google.maps).Data;return n.addGeoJson(e),{collection:n,add:function(e){n.setMap(e)},remove:function(){n.setMap(null)},setStyles:function(e){n.setStyle(function(t){return w(e(r[t.getProperty("osmId")],t))})},addEvent:function(e,t){n.addListener(e,function(n){var o=n.feature;t(r[o.getProperty("osmId")],[e,"google"],o,n)})},removeEvent:function(e){n.removeListener(e)}}}}}();"object"==typeof exports?module.exports=t:e.osmeRegions=t,"object"==typeof ymaps&&ymaps.modules&&ymaps.modules.define&&(ymaps.modules.define("osmeRegions",["vow","system.project"],function(e,r,n){e(ymaps.osmeRegions={load:function(e,o){var a=r.defer();return o=o||{},t.geoJSON(e,{lang:o.lang||n.data.lang.substr(0,2),quality:"quality"in o?o.quality:0},function(e){a.resolve({geoObjects:t.toYandex(e).collection})},function(){a.reject()}),a.promise()}})}),ymaps.modules.require("osmeRegions",function(){}))}(this);